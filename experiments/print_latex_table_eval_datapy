import numpy as np

PATH = "/mnt/c/Users/Elia/Desktop/rp-item.npy"


rp_item = np.load(PATH, allow_pickle=True)
corruptions = {}
for item in rp_item:
    name = item["name"]
    name = name.split("/")[-1]
    if name.split("_")[0] == "render":
         name = "no corruption"
    else:
        name = name.split("_")[0] + " " + name.split("_")[1]
    if name not in corruptions.keys():
        corruptions[name] = {}
        a = corruptions[name]
        a["chamfer"] = []
        a["p2s"] = []
    a = corruptions[name]
    a["chamfer"].append(item["vals"][0])
    a["p2s"].append(item["vals"][1])
chamfer_base = np.mean(corruptions["no corruption"]["chamfer"])*10
p2s_base = np.mean(corruptions["no corruption"]["p2s"])*10
for key in corruptions.keys():
    a = corruptions[key]
    chamfer = a["chamfer"]
    p2s = a["p2s"]
    chamfer_mean = np.mean(chamfer)*10
    p2s_mean = np.mean(p2s)*10
    chamfer_diff = chamfer_mean - chamfer_base
    p2s_diff = p2s_mean - p2s_base
    key = key[0].upper() + key[1:]
    print(key + " & " + str(round(chamfer_mean, 4)) + " & " + str(round(p2s_mean, 4)) + " & " + str(round(chamfer_diff, 4)) + " & " + str(round(p2s_diff, 4)) + " \\\\")


    



